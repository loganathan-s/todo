{"version":3,"sources":["webpack:///webpack/bootstrap a7336f298715b33cdf8f","webpack:///./src/js/helpers/helper.js","webpack:///./src/js/actions/taskSetup.js","webpack:///./src/js/dataModel/task.js","webpack:///./src/js/actions/taskSetUp.js","webpack:///./src/js/app.js","webpack:///./src/js/dataApi/httpRequest.js","webpack:///./src/js/settings/backendConf.js","webpack:///./src/js/views/taskView.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;ACxBA;AACmD;;AAEnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAwD,GAAG;AAC3D,sDAAsD,GAAG;;AAEzD;AACA,kEAAkE,GAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,KAAK;AACL,sBAAsB,aAAa,SAAS;AAC5C;AACA;AACA;;AAEA;;AAEA,oE;;;;;;;;;;;;ACxEiC;AACjC;AACA;AAC0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iFAAmB,8EAAO;AAC1B;AACA;AACA;AACA;;AAEA,MAAM;AACN;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,kFAAoB,8EAAO;AAC3B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,gFAAkB,8EAAO,aAAa,GAAG;AACzC;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,mFAAqB,8EAAO,aAAa,OAAO;AAChD;AACA;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,+D;;;;;;;;;AC7DA;AACmD;;AAEnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAwD,GAAG;AAC3D,sDAAsD,GAAG;;AAEzD;AACA,kEAAkE,GAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,KAAK;AACL,sBAAsB,aAAa,SAAS;AAC5C;AACA;AACA;;AAEA;;AAEA,oE;;;;;;;;ACxEA;AAAA;AACA;;AAEA;AACA;AACA;AACA,CAAC,E;;;;;;;ACND;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,uBAAuB,kEAAkE;AACzF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;;;AAGA;AACA;AACA,uBAAuB,iEAAiE;AACxF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA,kE;;;;;;;ACzEA;AAAA;AACA;;;;;;;;;;ACDA;AACkC;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ,UAAU,QAAQ;AACzE;AACA,OAAO;AACP,6CAA6C,QAAQ,kBAAkB,QAAQ;AAC/E;AACA,OAAO;AACP,2CAA2C,QAAQ;AACnD;;AAEA;AACA;AACA,+CAA+C,GAAG;AAClD,uCAAuC,GAAG;AAC1C,yDAAyD,GAAG;AAC5D;;AAEA;AACA;AACA,0CAA0C,GAAG;AAC7C,8CAA8C,GAAG;AACjD;;AAEA;AACA;AACA;AACA,uEAAuE,GAAG;AAC1E;AACA;AACA,8CAA8C,GAAG;AACjD,0CAA0C,GAAG;AAC7C;;AAEA;AACA;AACA,oCAAoC,QAAQ;AAC5C,uCAAuC,QAAQ,0CAA0C,yCAAyC;AAClI,8CAA8C,QAAQ;AACtD,0CAA0C,QAAQ;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,QAAQ,mBAAmB,QAAQ;AAClF,sCAAsC,8CAA8C,gBAAgB,QAAQ;AAC5G,0GAA0G,QAAQ;AAClH,sBAAsB;AACtB;AACA;AACA;AACA,oDAAoD,QAAQ,IAAI,6DAA6D;AAC7H,qEAAqE,QAAQ;AAC7E;AACA;AACA,8DAA8D,QAAQ;AACtE;AACA,yDAAyD,QAAQ;AACjE;;AAEA;AACA,oEAAoE,QAAQ;AAC5E,4DAA4D,QAAQ;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,+D","file":"./public/_build/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a7336f298715b33cdf8f","/* Helper functions  */\n\nexport const extractNumber = (data)=> (parseInt(data.match(/\\d+/)) ? parseInt(data.match(/\\d+/)) : 0);\n\nexport const resetInput = (input)=> (input.value = '');\n\nexport const  displayBackendError = (error) => {\n    let globalError = document.querySelector(\"#serverError\");\n    globalError.innerHTML = error;\n    globalError.classList.remove(\"hide\");\n};\n\nconst hasError = (inputElement) => {\n     return ((inputElement.nextSibling && inputElement.nextSibling.classList && inputElement.nextSibling.classList.contains(\"errorText\")) || false);\n};\n\nexport const displayError = (inputElement) => {\n    inputElement.classList.add(\"shakeIt\", \"inputError\");\n    return (!hasError(inputElement) ? inputElement.insertAdjacentHTML(\"afterend\", \"<span class='errorText'>can't be blank</span>\") : false);\n};\n\nexport const removeError = (inputElement) => {\n    inputElement.classList.remove(\"shakeIt\", \"inputError\");\n    return (hasError(inputElement) ? inputElement.nextSibling.remove() : false);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/helpers/helper.js\n// module id = 0\n// module chunks = 0","import Task from \"../dataModel/task\";\nimport { extractNumber,  displayError, removeError} from \"../helpers/helper\";\n\n/* Action Handlers */\nclass TaskSetup {\n \n  constructor(){\n    this.taskContent = document.querySelector(\"#taskDescription\");\n    this.parentElement =  document.querySelector(\"#todoPanel\");\n  }\n  \n  /* Attach EventListener to elements */  \n  init(){\n    document.querySelector(\"#createTask\").addEventListener(\"submit\",this.createTask.bind(this));\n    this.displayAllTasks();\n  }\n\n  /* Display All tasks when user loads the page */\n  displayAllTasks(){\n     let task = new Task();\n     task.index();\n  }\n  \n  /* Create Task using the api */\n  createTask(){\n    event.preventDefault();\n    const text = this.taskContent.value;\n    removeError(this.taskContent);\n    if (text){\n      const recentTask = document.querySelector(\".taskItem\");\n      const task = new Task();\n      const id = ((recentTask && recentTask.id) ? (extractNumber(recentTask.id)+1) : 1);\n      const taskData = {id, text};\n      task.create(taskData);\n    }\n    else{\n     displayError(this.taskContent);\n     }\n  }\n\n  /* Delete Task Action */\n  delete(taskId){\n    let id = event.currentTarget.id.match(/\\d+/g);\n    let task = new Task();\n    task.delete(id);\n  }\n  \n  /* Update the Task Text with delimter to keep the persistent data of whether the task is complete/incomplete. */\n  markCompleteOrIncomplte(event){\n    const task = new Task();\n    const id = event.currentTarget.id.match(/\\d+/g);\n    const taskElement = document.querySelector(`#task-${id}`);\n    let tasktext = document.querySelector(`#taskText${id}`).textContent;\n\n    if(event.currentTarget.classList.contains(\"updateTask\")){\n       const newValue = document.querySelector(`#UpdatedContent-${id}`);\n       removeError(newValue);\n       tasktext = newValue.value;\n       if(!tasktext){\n          displayError(newValue);\n          return;\n       }\n       let taskData = {id, text: tasktext.replace(\"-TASKCOMPLETED-\", \"\")};\n       task.update(taskData, id, true);\n    }else{\n      let taskData = {id, text: `${tasktext}-TASKCOMPLETED-`};\n      task.update(taskData, id);\n    }\n  }\n  \n}\n\nexport default TaskSetup;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/actions/taskSetup.js\n// module id = 1\n// module chunks = 0","import {BACKENDAPP_URL as appURL} from \"../settings/backendConf\";\nimport Request from \"../dataApi/httpRequest\";\nimport TaskSetup from \"../actions/taskSetup\";\nimport { resetInput, displayBackendError } from \"../helpers/helper\";\nimport View from \"../views/taskView\";\n\n/* Class which updates the backend server */\nclass Task extends TaskSetup {\n  constructor(){\n    super();\n  }\n\n  /* List All tasks from the backend server */\n  index(){\n    Request.get(`${appURL}/api/tasks`)\n      .then(response => {\n        for (let [id, task] of Object.entries(response)) {\n          View.Render().updateTaskList(task);\n        }\n\n     })\n     .catch(err => {\n       View.Render().displayServerError(err.message);\n      });\n  }\n  \n  /* Create task on the backend server */\n  create(newTask){\n    Request.post(`${appURL}/api/tasks`, newTask)\n    .then(() => {\n       resetInput(this.taskContent);\n       View.Render().updateTaskList(newTask);\n     })\n     .catch(err => {\n       View.Render().displayBackendError(err.message);\n      });\n  }\n\n  /* Update Task with Flag to indentify the task is completed or not */\n  update(task, id, reloadTask = false){\n   Request.put(`${appURL}/api/tasks/${id}`, task).then(() => {\n        (reloadTask ? View.Render().updateTaskContent(task) : View.Render().updateUserDom(id));\n       })\n       .catch(err => {\n         View.Render().displayServerError(err.message);\n        });\n  }\n\n  /*delete Task */\n  delete(taskId){\n   Request.delete(`${appURL}/api/tasks/${taskId}`)\n       .then(() => {\n         View.Render().removeTaskInDom(taskId);\n       })\n       .catch(err => {\n         View.Render().displayServerError(err.message);\n        });\n    }\n\n}\n\nexport default Task;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/dataModel/task.js\n// module id = 2\n// module chunks = 0","import Task from \"../dataModel/task\";\nimport { extractNumber,  displayError, removeError} from \"../helpers/helper\";\n\n/* Action Handlers */\nclass TaskSetup {\n \n  constructor(){\n    this.taskContent = document.querySelector(\"#taskDescription\");\n    this.parentElement =  document.querySelector(\"#todoPanel\");\n  }\n  \n  /* Attach EventListener to elements */  \n  init(){\n    document.querySelector(\"#createTask\").addEventListener(\"submit\",this.createTask.bind(this));\n    this.displayAllTasks();\n  }\n\n  /* Display All tasks when user loads the page */\n  displayAllTasks(){\n     let task = new Task();\n     task.index();\n  }\n  \n  /* Create Task using the api */\n  createTask(){\n    event.preventDefault();\n    const text = this.taskContent.value;\n    removeError(this.taskContent);\n    if (text){\n      const recentTask = document.querySelector(\".taskItem\");\n      const task = new Task();\n      const id = ((recentTask && recentTask.id) ? (extractNumber(recentTask.id)+1) : 1);\n      const taskData = {id, text};\n      task.create(taskData);\n    }\n    else{\n     displayError(this.taskContent);\n     }\n  }\n\n  /* Delete Task Action */\n  delete(taskId){\n    let id = event.currentTarget.id.match(/\\d+/g);\n    let task = new Task();\n    task.delete(id);\n  }\n  \n  /* Update the Task Text with delimter to keep the persistent data of whether the task is complete/incomplete. */\n  markCompleteOrIncomplte(event){\n    const task = new Task();\n    const id = event.currentTarget.id.match(/\\d+/g);\n    const taskElement = document.querySelector(`#task-${id}`);\n    let tasktext = document.querySelector(`#taskText${id}`).textContent;\n\n    if(event.currentTarget.classList.contains(\"updateTask\")){\n       const newValue = document.querySelector(`#UpdatedContent-${id}`);\n       removeError(newValue);\n       tasktext = newValue.value;\n       if(!tasktext){\n          displayError(newValue);\n          return;\n       }\n       let taskData = {id, text: tasktext.replace(\"-TASKCOMPLETED-\", \"\")};\n       task.update(taskData, id, true);\n    }else{\n      let taskData = {id, text: `${tasktext}-TASKCOMPLETED-`};\n      task.update(taskData, id);\n    }\n  }\n  \n}\n\nexport default TaskSetup;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/actions/taskSetUp.js\n// module id = 3\n// module chunks = 0","/* APP JS to start FrontEnd Scripts */\nimport TaskSetUp from \"./actions/taskSetUp\";\n\nwindow.addEventListener(\"load\", function() {\n const todoApp = new TaskSetUp();\n todoApp.init();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/app.js\n// module id = 4\n// module chunks = 0","/* This module handles all the Express api requests, this can be used for any URL. You just have to pass the URL & data */\nclass Request {\n  \n  /* Set Header for All the requests */\n  static get HEADERS() {\n    return  {\n              \"Accept\":  \"application/json, text/plain\", \n              \"Content-Type\": \"application/json\"\n            };\n    }\n\n  /* GET Request */\n  static get(url){\n    return fetch(url)\n            .then(response => {\n                if (!response.ok) {\n                throw new Error(response.statusText);\n              }\n              return response.json();\n          })\n   .catch(err => {\n      throw new Error(err);\n    });\n  }\n  \n\n  /* POST Request */\n  static post(url, data){\n    return fetch(url, {method: \"post\", headers: this.HEADERS, body: JSON.stringify(data)})\n           .then(response => {\n              if (!response.ok) {\n                 throw new Error(response.statusText);\n              }\n              return true;\n            })\n           .catch((err) => {\n               throw new Error(err);\n            });\n  }\n\n  \n  /* PUT Request */\n  static put(url, data){\n    return fetch(url, {method: \"put\", headers: this.HEADERS, body: JSON.stringify(data)})\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return true;\n    })\n    .catch(err => {\n     throw new Error(err);\n    });\n  }\n\n\n  /* DELETE Request */\n  static delete(url){\n      return fetch(url, {method: \"delete\", headers: this.HEADERS})\n              .then(response => {\n                  if (!response.ok) {\n                  throw new Error(response.statusText);\n                }\n                return response.ok;\n            })\n     .catch(err => {\n       throw new Error(err);\n      });\n    }\n  \n}\n\n/* Default Export */\nexport default Request;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/dataApi/httpRequest.js\n// module id = 5\n// module chunks = 0","/* Backend Api application, powered by ExpressJs App */\nconst BACKENDAPP_URL=\"http://localhost:3000\";\nexport {BACKENDAPP_URL};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/settings/backendConf.js\n// module id = 6\n// module chunks = 0","import TaskSetup from \"../actions/taskSetup\";\nimport { resetInput, removeError } from \"../helpers/helper\";\n\n/* Class Which handles DOM Updates*/\nclass View extends TaskSetup {\n  constructor(){\n    super()\n  }\n \n  /* Update the Task list */\n  updateTaskList(task){\n      this.parentElement.insertAdjacentHTML(\"afterbegin\", this.createTaskElementDom(task));\n      let parentInstance = this;\n      document.querySelectorAll(`#taskUpdate-${task.id}, #task-${task.id}`).forEach(function(node){\n        node.addEventListener(\"click\", parentInstance.markCompleteOrIncomplte.bind(parentInstance));\n      });\n      document.querySelectorAll(`#taskEdit-${task.id}, #cancelUpdate-${task.id}`).forEach(function(node){\n        node.addEventListener(\"click\", parentInstance.displayUpdateForm.bind(parentInstance));\n      });\n     document.querySelector(`#taskDelete-${task.id}`).addEventListener(\"click\", this.delete.bind(this));\n  }\n  \n  /* Update the Task list to show whether it is completed or not */\n  updateUserDom(id){\n    let link = document.querySelector(`#task-${id}`);\n    document.querySelector(`#taskText${id}`).classList.toggle(\"lineThrough\");\n     link.innerHTML = document.querySelector(`#taskText${id}`).classList.contains(\"lineThrough\") ? \"Undo complete\" : \"Mark complete\";\n  }\n\n  /* Remove task from DOM */\n  removeTaskInDom(id){\n    document.querySelector(`#taskDetail-${id}`).remove();\n    document.querySelector(`#taskUpdateForm-${id}`).remove();\n  }\n\n  /* Display task update form */\n  displayUpdateForm(){\n    let id = event.currentTarget.id.match(/\\d+/g);\n    let updateInputElement = document.querySelector(`#UpdatedContent-${id}`);\n    removeError(updateInputElement);\n    resetInput(updateInputElement);\n    document.querySelector(`#taskUpdateForm-${id}`).classList.toggle(\"hide\");\n    document.querySelector(`#taskDetail-${id}`).classList.toggle(\"hide\");\n  }\n\n  /* Display updated task */\n  updateTaskContent(task){\n    document.querySelector(`#task-${task.id}`).innerHTML = this.taskCompleted(task) ? \"Undo complete\" : \"Mark Complete\";\n    document.querySelector(`#taskText${task.id}`).firstChild.nextSibling.innerHTML  = `${task.text.replace(\"-TASKCOMPLETED-\", \"\")}`;\n    document.querySelector(`#taskUpdateForm-${task.id}`).classList.toggle(\"hide\");\n    document.querySelector(`#taskDetail-${task.id}`).classList.toggle(\"hide\");\n  }\n\n  taskCompleted(task){\n    return (task.text.includes(\"-TASKCOMPLETED-\") ? true : false);\n  }\n\n  hideBackendError(){\n    document.querySelector(`#ServerError`).classList.add(\"hide\");\n  }\n \n  /* Add Task item */\n  createTaskElementDom(task) {\n     return `<div class=\"taskItem taskDetail-${task.id}\" id=\"taskDetail-${task.id}\">\n               <div class=\"taskText ${this.taskCompleted(task) ? \"lineThrough\" : \"\"}\" id=\"taskText${task.id}\">\n                  <p  tooltip=\"Click to edit!\" tooltip-position=\"bottom\"  class=\"editTask\" id=\"taskEdit-${task.id}\">\n                    ${task.text.replace(\"-TASKCOMPLETED-\", \"\")}\n                  </p>\n               </div>\n               <div class=\"options\">\n                    <a class=\"link zoom\" id=\"task-${task.id}\">${this.taskCompleted(task) ? \"Undo complete\" : \"Mark complete\"}</a>\n                    <a class=\"link zoom updateFlex\" id=\"taskDelete-${task.id}\">Delete</a>\n               </div>\n          </div>\n            <div class=\"updateForm hide\" id=\"taskUpdateForm-${task.id}\">\n                <p>\n                 <input type=\"text\" id=\"UpdatedContent-${task.id}\" autocomplete=\"off\">\n                </p>\n\n               <p>\n                 <a class=\"button zoom updateTask\" id=\"taskUpdate-${task.id}\"\"> Update</a>\n                 <a  class=\"button zoom\" id=\"cancelUpdate-${task.id}\"> Cancel</a>\n               </p>\n            </div>`;\n  }\n \n /* Display Server Error */ \n displayServerError(error) {\n    let globalError = document.querySelector(\"#serverError\");\n    globalError.innerHTML = error;\n    globalError.classList.remove(\"hide\");\n}\n\nstatic Render(){\n return new View();\n}\n  \n}\n\nexport default View;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/views/taskView.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}